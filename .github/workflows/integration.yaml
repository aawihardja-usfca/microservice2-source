name: Build only changed services

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      # 'changes' is a JSON array of all filter names that matched
      changed: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          # full history is required for `paths-filter` to compare against the base
          fetch-depth: 0

      - name: Detect changed services
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            auth-api:
              - 'auth-api/**'
            todos-api:
              - 'todos-api/**'
            users-api:
              - 'users-api/**'
            log-message-processor:
              - 'log-message-processor/**'

  build:
    needs: detect_changes
    runs-on: ubuntu-latest
    # skip entirely if nothing changed
    if: ${{ needs.detect_changes.outputs.changed != '[]' }}
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect_changes.outputs.changed) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Read VERSION
        id: get_version
        run: |
          echo "version=$(< ${{ matrix.service }}/VERSION)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          echo "Building Docker image for ${{ matrix.service }} with version ${{ steps.get_version.outputs.version }}"
          
          # docker build \
          #   -t my-ecr-repo/${{ matrix.service }}:${{ steps.get_version.outputs.version }} \
          #   ./${{ matrix.service }}

      # ── you can add your AWS/ECR login here ──

      #- name: Push Docker image to ECR
      #  run: |
      #    docker push my-ecr-repo/${{ matrix.service }}:${{ steps.get_version.outputs.version }}
