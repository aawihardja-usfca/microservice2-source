# Nightly builds all servces and pushes them to ECR with tag qa-<service>-nightly-<date>
name: Nightly build & push

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: '035863456454'

jobs:
  nightly:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ frontend, auth-api, todos-api, users-api, log-message-processor ]

    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
      
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push nightly image
        id: nightly_build
        run: |
          REPO=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          # e.g. qa-auth-api-nightly-20250502
          IMAGE=$REPO/${{ matrix.service }}:qa-${{ matrix.service }}-nightly-$(date +'%Y%m%d')
          echo "Building $IMAGE"
          docker build --pull -t $IMAGE ./${{ matrix.service }}
          docker push $IMAGE
          echo "image_uri=$IMAGE" >> $GITHUB_OUTPUT

      # No need to notify infra-repo, just build & push
      # - name: Dispatch to infra (QA)
      #   uses: peter-evans/repository-dispatch@v3
      #   with:
      #     token: ${{ secrets.INFRA_REPO_TOKEN }}
      #     repository: aawihardja-usfca/microservice2-infra
      #     event-type: nightly-build
      #     client-payload: |
      #       {
      #         "service":    "${{ matrix.service }}",
      #         "image_uri":  "${{ steps.nightly_build.outputs.image_uri }}",
      #         "environment":"qa"
      #       }
